class Solution {
    func subarraySum(_ nums: [Int], _ k: Int) -> Int {
        var count = 0

        // Solution 1: Brutal Force
        // for i in 0..<nums.count {
        //     for j in i..<nums.count {
        //         let subArr = Array(nums[i...j])
        //         let sum = subArr.reduce(0,+)
        //         if sum == k {
        //             count += 1
        //         }
        //     }
        // } 
        
        // Solution 2: Dynamic Programming
        var sums = nums
        for i in 1..<sums.count { 
            sums[i] += sums[i-1]
        } // sums(0, i) = the sum up until index i
        for i in 0..<sums.count { 
            for j in i..<sums.count {
                if i == 0 {
                    if sums[j] == k {
                        count += 1
                    }
                } else if sums[j] - sums[i-1] == k {
                    count += 1
                }
            }
        }
        return count
    }
}